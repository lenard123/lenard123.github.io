!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=21)}([function(t,e,n){"use strict";function r(t,e,n,r,i,o,a,s){var l,u="function"==typeof t?t.options:t;if(e&&(u.render=e,u.staticRenderFns=n,u._compiled=!0),r&&(u.functional=!0),o&&(u._scopeId="data-v-"+o),a?(l=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(a)},u._ssrRegister=l):i&&(l=s?function(){i.call(this,this.$root.$options.shadowRoot)}:i),l)if(u.functional){u._injectStyles=l;var c=u.render;u.render=function(t,e){return l.call(e),c(t,e)}}else{var d=u.beforeCreate;u.beforeCreate=d?[].concat(d,l):[l]}return{exports:t,options:u}}n.d(e,"a",function(){return r})},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=function(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}(r),o=r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"});return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+n+"}":n}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<t.length;i++){var a=t[i];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){"use strict";function r(t,e){for(var n=[],r={},i=0;i<e.length;i++){var o=e[i],a=o[0],s={id:t+":"+i,css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}n.r(e),n.d(e,"default",function(){return p});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},a=i&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,u=!1,c=function(){},d=null,f="data-vue-ssr-id",h="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function p(t,e,n,i){u=n,d=i||{};var a=r(t,e);return m(a),function(e){for(var n=[],i=0;i<a.length;i++){var s=a[i];(l=o[s.id]).refs--,n.push(l)}e?m(a=r(t,e)):a=[];for(i=0;i<n.length;i++){var l;if(0===(l=n[i]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete o[l.id]}}}}function m(t){for(var e=0;e<t.length;e++){var n=t[e],r=o[n.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](n.parts[i]);for(;i<n.parts.length;i++)r.parts.push(g(n.parts[i]));r.parts.length>n.parts.length&&(r.parts.length=n.parts.length)}else{var a=[];for(i=0;i<n.parts.length;i++)a.push(g(n.parts[i]));o[n.id]={id:n.id,refs:1,parts:a}}}}function v(){var t=document.createElement("style");return t.type="text/css",a.appendChild(t),t}function g(t){var e,n,r=document.querySelector("style["+f+'~="'+t.id+'"]');if(r){if(u)return c;r.parentNode.removeChild(r)}if(h){var i=l++;r=s||(s=v()),e=b.bind(null,r,i,!1),n=b.bind(null,r,i,!0)}else r=v(),e=function(t,e){var n=e.css,r=e.media,i=e.sourceMap;r&&t.setAttribute("media",r);d.ssrId&&t.setAttribute(f,e.id);i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,r),n=function(){r.parentNode.removeChild(r)};return e(t),function(r){if(r){if(r.css===t.css&&r.media===t.media&&r.sourceMap===t.sourceMap)return;e(t=r)}else n()}}var _=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}();function b(t,e,n,r){var i=n?"":r.css;if(t.styleSheet)t.styleSheet.cssText=_(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}},function(t,e,n){"use strict";n.r(e);var r=n(4),i=n.n(r);for(var o in r)"default"!==o&&function(t){n.d(e,t,function(){return r[t]})}(o);e.default=i.a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,n(25);var r={props:{name:name,dismissable:{default:!0}}};e.default=r},function(t,e,n){"use strict";n.r(e);var r=n(6),i=n.n(r);for(var o in r)"default"!==o&&function(t){n.d(e,t,function(){return r[t]})}(o);e.default=i.a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r={data:function(){return{color:[{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0},{r:0,g:0,b:0}]}},created:function(){var t=this;setInterval(function(){for(var e=0;e<9;e++)t.color[e].r=Math.floor(255*Math.random()),t.color[e].g=Math.floor(255*Math.random()),t.color[e].b=Math.floor(255*Math.random())},500)},methods:{randomColor:function(t){var e=this.color[t];return"color: rgb(".concat(e.r,", ").concat(e.g,", ").concat(e.b,");")},submitName:function(){var t=this.name,e=this.players;if(""==t||t==e[1]||t==e[2])return this.$l.alert("Invalid Name","FAILED!!!");this.$l.openModal("menu")},submit:function(t){this.$store.commit("mode",t),this.$l.closeModal("menu"),this.$router.push({name:"game"})}},computed:{players:function(){return this.$store.state.players},modes:function(){return this.$store.state.modes},name:{get:function(){return this.players[0]},set:function(t){this.$store.commit("player1",t)}}}};e.default=r},function(t,e,n){"use strict";n.r(e);var r=n(8),i=n.n(r);for(var o in r)"default"!==o&&function(t){n.d(e,t,function(){return r[t]})}(o);e.default=i.a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=o(n(30)),i=o(n(31));function o(t){return t&&t.__esModule?t:{default:t}}var a={created:function(){this.$store.commit("newgame")},data:function(){return{win_pattern:[[0,1,2],[0,3,6],[0,4,8],[1,4,7],[2,4,6],[2,5,8],[3,4,5],[6,7,8]],trash_talk:["Bobo tanga tanga","A.I. na nga lang tinalo pa","Walang kwenta","obob, Wik"]}},components:{cell:r.default},methods:{aiTurn:function(){var t=(0,i.default)(this.cells,this.move,this.logs[this.logs.length-1]);0===this.mode?this.placeTurn(t.getAIEasy(),!0):this.placeTurn(t.getAIHard(),!0)},addLogs:function(t,e,n){var r={player:t,place:e,move:n};this.$store.commit("addLogs",r)},isValidPlace:function(t){return 2===this.cells[t]},isPlayer:function(t){return 0==t||(1==t&&2==this.mode||2==t&&(0==this.mode||1==this.mode))},playAgain:function(){var t=this;this.$l.closeModal("gameover"),this.$store.commit("newgame"),this.$store.commit("resetCell"),2==this.turn&&setTimeout(function(){return t.aiTurn()},1e3)},placeTurn:function(t,e){var n=this;if(2===this.turn&&void 0==e)return!1;if(!this.isValidPlace(t))return!1;if(this.$store.commit("updateCell",[t,this.move]),this.addLogs(this.turn,t,this.move),this.$store.commit("switchMove"),this.isGameOver()){var r=this.getWinner().winner;this.isDraw()||this.$store.commit("incrementScore",r),this.$l.openModal("gameover")}else 2===this.turn&&setTimeout(function(){return n.aiTurn()},1e3)},quit:function(){this.$store.dispatch("resetGame"),this.$router.go(-1)},getWinner:function(){if(!this.isGameOver())return!1;var t=this.logs[this.logs.length-1],e=t[t.length-1].player;return{winner:e,message:this.isDraw()?"Draw":0==e||1==e?this.players[e]+" Win":this.generateTrashtalk()}},generateTrashtalk:function(){var t=this.trash_talk;return t[Math.floor(Math.random()*t.length)]},isDraw:function(){return this.cells.every(function(t){return 2!==t})},isGameOver:function(){var t=this;for(var e in this.win_pattern){var n=this.win_pattern[e].map(function(e){return t.cells[e]});if(n.every(function(t){return 0===t})||n.every(function(t){return 1===t}))return!0}return this.isDraw()}},computed:{cells:function(){return this.$store.state.cells},modes:function(){return this.$store.state.modes},mode:function(){return this.$store.state.mode},moves:function(){return this.$store.state.moves},move:function(){return this.$store.state.move},logs:function(){return this.$store.state.logs},players:function(){return this.$store.state.players},scores:function(){return this.$store.state.scores},turn:function(){var t=this,e=this.logs,n=e[e.length-1],r=function(e){return 0!=e?0:2==t.mode?1:2};if(1==e.length&&n.length<1)return 0;if(e.length>1&&n.length<1){var i=e[e.length-2];return r(i[i.length-1].player)}return r(n[n.length-1].player)}}};e.default=a},function(t,e,n){"use strict";n.r(e);var r=n(10),i=n.n(r);for(var o in r)"default"!==o&&function(t){n.d(e,t,function(){return r[t]})}(o);e.default=i.a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default={props:["id"],methods:{getStyle:function(){return 0===this.cells[this.id]?{backgroundColor:"black"}:1===this.cells[this.id]?{backgroundColor:"#2d2d2d"}:void 0}},computed:{value:function(){return this.moves[this.cells[this.id]]},cells:function(){return this.$store.state.cells},moves:function(){return this.$store.state.moves}}}},function(t,e,n){var r=n(33);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,n(2).default)("a80acbe4",r,!1,{})},function(t,e,n){var r=n(35);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,n(2).default)("230dca89",r,!1,{})},function(t,e,n){"use strict";n.r(e);var r=n(14),i=n.n(r);for(var o in r)"default"!==o&&function(t){n.d(e,t,function(){return r[t]})}(o);e.default=i.a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default={props:["lClass"],methods:{back:function(){this.$l.openModal("quit-game")}}}},function(t,e,n){var r=n(39);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,n(2).default)("7b2b01ee",r,!1,{})},function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("header",{staticClass:"title-bar fixed-top"},[n("h1",{class:"title "+t.lClass},[t._t("default")],2),t._v(" "),n("button",{staticClass:"button",staticStyle:{float:"right",margin:"5px"},on:{click:function(e){t.back()}}},[t._v("BACK")])])},i=[];r._withStripped=!0,n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"modal",attrs:{"data-role":"modal",id:t.name}},[n("div",{staticClass:"modal-content"},[t.dismissable?n("span",{staticClass:"close",on:{click:function(e){t.$l.closeModal(t.name)}}},[t._v("×")]):t._e(),t._v(" "),t._t("default")],2)])},i=[];r._withStripped=!0,n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"container"},[n("div",{staticClass:"row"},[n("div",{staticClass:"col-xs-6 col-md-4 game-title"},[n("table",[n("tr",[n("td",{style:t.randomColor(0)},[t._v("T")]),t._v(" "),n("td",{style:t.randomColor(1)},[t._v("I")]),t._v(" "),n("td",{style:t.randomColor(2)},[t._v("C")])]),t._v(" "),n("tr",[n("td",{style:t.randomColor(3)},[t._v("T")]),t._v(" "),n("td",{style:t.randomColor(4)},[t._v("A")]),t._v(" "),n("td",{style:t.randomColor(5)},[t._v("C")])]),t._v(" "),n("tr",[n("td",{style:t.randomColor(6)},[t._v("T")]),t._v(" "),n("td",{style:t.randomColor(7)},[t._v("O")]),t._v(" "),n("td",{style:t.randomColor(8)},[t._v("E")])])])]),t._v(" "),n("div",{staticClass:"col-xs-6 col-md-8",staticStyle:{"margin-top":"10px"}},[n("form",{on:{submit:function(e){e.preventDefault(),t.submitName()}}},[n("ul",{staticClass:"full-width vertical-list"},[n("li",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.name,expression:"name"}],staticClass:"search-input full-width",attrs:{type:"text",placeholder:"Enter your name here"},domProps:{value:t.name},on:{input:function(e){e.target.composing||(t.name=e.target.value)}}})]),t._v(" "),t._m(0)])])])]),t._v(" "),n("modal",{attrs:{name:"menu"}},[n("div",{staticClass:"modal-header"},[t._v("CHOOSE GAME MODE")]),t._v(" "),n("div",{staticClass:"modal-body"},[n("ul",{staticClass:"vertical-list full-width"},t._l(t.modes,function(e,r){return n("li",[n("input",{staticClass:"button full-width",attrs:{type:"button",value:e},on:{click:function(e){t.submit(r)}}})])}))])])],1)},i=[function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("input",{staticClass:"button full-width",attrs:{type:"submit",value:"Submit"}})])}];r._withStripped=!0,n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"container"},[n("l-header",[t._v(t._s(t.modes[t.mode]))]),t._v(" "),n("div",{staticClass:"row"},[n("center",{staticClass:"col-md-6"},[n("h1",[t._v(t._s(t.players[t.turn])+" Turn")]),t._v(" "),n("table",{staticClass:"game-table"},[n("tr",[n("cell",{attrs:{id:0}}),t._v(" "),n("cell",{attrs:{id:1}}),t._v(" "),n("cell",{attrs:{id:2}})],1),t._v(" "),n("tr",[n("cell",{attrs:{id:3}}),t._v(" "),n("cell",{attrs:{id:4}}),t._v(" "),n("cell",{attrs:{id:5}})],1),t._v(" "),n("tr",[n("cell",{attrs:{id:6}}),t._v(" "),n("cell",{attrs:{id:7}}),t._v(" "),n("cell",{attrs:{id:8}})],1)])]),t._v(" "),n("div",{staticClass:"col-md-6"},[n("h4",[t._v("Scores")]),t._v(" "),n("ul",{staticStyle:{"list-style-type":"none"}},t._l(t.players,function(e,r){return t.isPlayer(r)?n("li",[n("b",[t._v(t._s(e)+": ")]),t._v(t._s(t.scores[r])+"\r\n\t\t\t\t")]):t._e()}))])],1),t._v(" "),n("modal",{attrs:{name:"gameover",dismissable:!1}},[n("div",{staticClass:"modal-header"},[t._v("GAME OVER!!!")]),t._v(" "),n("div",{staticClass:"modal-body"},[n("center",[n("h1",[t._v(t._s(t.getWinner().message))])])],1),t._v(" "),n("div",{staticClass:"modal-footer"},[n("div",{staticClass:"button-group"},[n("button",{staticClass:"button",staticStyle:{"border-color":"lime"},on:{click:function(e){t.playAgain()}}},[t._v("Play Again")]),t._v(" "),n("button",{staticClass:"button",staticStyle:{"border-color":"red"},on:{click:function(e){t.quit()}}},[t._v("Quit")])])])]),t._v(" "),n("modal",{attrs:{name:"quit-game"}},[n("div",{staticClass:"modal-header"},[t._v("Confirm")]),t._v(" "),n("div",{staticClass:"modal-body"},[n("h4",[t._v("Are you sure to quit game?")])]),t._v(" "),n("div",{staticClass:"modal-footer"},[n("div",{staticClass:"button-group"},[n("button",{staticClass:"button",on:{click:function(e){t.quit()}}},[t._v("Yes")]),t._v(" "),n("button",{staticClass:"button",on:{click:function(e){t.$l.closeModal("quit-game")}}},[t._v("No")])])])])],1)},i=[];r._withStripped=!0,n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement;return(t._self._c||e)("td",{style:t.getStyle(),on:{click:function(e){t.$parent.placeTurn(t.id)}}},[t._v("\r\n\t"+t._s(t.value)+"\r\n")])},i=[];r._withStripped=!0,n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){t.exports=n(22)},function(t,e,n){"use strict";var r=l(n(23)),i=l(n(27)),o=l(n(40)),a=l(n(36)),s=l(n(37));function l(t){return t&&t.__esModule?t:{default:t}}Vue.component("lHeader",s.default),Vue.use(r.default),new Vue({router:i.default,store:new Vuex.Store(a.default),el:"#app",render:function(t){return t(o.default)}})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=function(t){return t&&t.__esModule?t:{default:t}}(n(24));var i={install:function(t){t.component("modal",r.default),t.prototype.$l={createModal:function(t){var e=document.createElement("div");e.setAttribute("data-role","modal"),e.setAttribute("id",t),e.setAttribute("class","modal");var n=document.createElement("div");return n.setAttribute("class","modal-content"),e.appendChild(n),document.body.appendChild(e),n},openModal:function(t){document.getElementById(t).style.display="block"},closeModal:function(t){document.getElementById(t).style.display="none"},alert:function(t,e){var n="modal"+Math.floor(1e3*Math.random()),r=this.createModal(n);if(r.parentElement.onclick=function(){document.body.removeChild(r.parentElement)},void 0!==e){var i=document.createElement("div");i.setAttribute("class","modal-header"),i.innerHTML=e,r.appendChild(i)}var o=document.createElement("div");o.setAttribute("class","modal-body"),o.innerHTML=t,r.appendChild(o),this.openModal(n)}}}};e.default=i},function(t,e,n){"use strict";n.r(e);var r=n(17),i=n(3);for(var o in i)"default"!==o&&function(t){n.d(e,t,function(){return i[t]})}(o);var a=n(0),s=Object(a.a)(i.default,r.a,r.b,!1,null,null,null);s.options.__file="src\\myplugin\\Modal.vue",e.default=s.exports},function(t,e,n){var r=n(26);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,n(2).default)("19dd6bfe",r,!1,{})},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,".modal{\r\n\tz-index: 1;\r\n\tposition: fixed; \r\n\tleft: 0;\r\n\ttop: 0;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tbackground-color: rgb(0,0,0, 0.5);\r\n\tdisplay: none;\r\n}\r\n\r\n/* Modal Content */\r\n.modal-content {\r\n    position: relative;\r\n    background-color: #40464b;\r\n    color: #ccc;\r\n    margin: auto;\r\n    padding: 0;\r\n    border: 1px solid #888;\r\n    width: 80%;\r\n    top: 50px;\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\r\n    -webkit-animation-name: animatetop;\r\n    -webkit-animation-duration: 0.4s;\r\n    animation-name: animatetop;\r\n    animation-duration: 0.4s\r\n}\r\n\r\n.modal-header, .modal-footer {\r\n\tfont-size: 1.2em;\r\n    padding: 10px 16px;\r\n    background: #2d3032;\r\n\tborder-bottom: 1px solid #2a2c2e;\r\n}\r\n\r\n.modal-body {padding: 10px 16px;}\r\n\r\n.close {\r\n    color: #aaa;\r\n    float: right;\r\n    margin-right: 10px;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n}",""])},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=o(n(28)),i=o(n(29));function o(t){return t&&t.__esModule?t:{default:t}}var a=[{path:"/",component:r.default,name:"home"},{path:"/game",component:i.default,name:"game",beforeEnter:function(t,e,n){"home"!=e.name?n({name:"home"}):n()}}],s=new VueRouter({routes:a});e.default=s},function(t,e,n){"use strict";n.r(e);var r=n(18),i=n(5);for(var o in i)"default"!==o&&function(t){n.d(e,t,function(){return i[t]})}(o);var a=n(0),s=Object(a.a)(i.default,r.a,r.b,!1,null,null,null);s.options.__file="src\\components\\Home.vue",e.default=s.exports},function(t,e,n){"use strict";n.r(e);var r=n(19),i=n(7);for(var o in i)"default"!==o&&function(t){n.d(e,t,function(){return i[t]})}(o);n(32);var a=n(0),s=Object(a.a)(i.default,r.a,r.b,!1,null,null,null);s.options.__file="src\\components\\Game.vue",e.default=s.exports},function(t,e,n){"use strict";n.r(e);var r=n(20),i=n(9);for(var o in i)"default"!==o&&function(t){n.d(e,t,function(){return i[t]})}(o);var a=n(0),s=Object(a.a)(i.default,r.a,r.b,!1,null,null,null);s.options.__file="src\\components\\Cell.vue",e.default=s.exports},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){return{cells:t,move:e,game:n,corners:[0,2,6,8],corner_patterns:[[0,2,8],[0,6,8],[0,8,2],[2,0,6],[2,8,0],[2,6,0],[6,0,2],[6,8,2],[6,2,8],[8,2,0],[8,6,0],[8,0,6]],diagonal_pattern:[[0,8],[2,6],[6,2],[8,0]],sides:[1,3,5,7],side_patterns:[[0,1,6],[0,3,4],[0,5,2],[0,7,6],[2,1,8],[2,5,0],[2,3,0],[2,7,8],[6,3,8],[6,7,0],[6,1,0],[6,5,8],[8,5,6],[8,7,2],[8,1,2],[8,3,6]],beside_patterns:[[0,1,3],[2,1,5],[6,3,7],[8,5,7]],win_pattern:[[0,1,2],[0,3,6],[0,4,8],[1,4,7],[2,4,6],[2,5,8],[3,4,5],[6,7,8]],getAIEasy:function(){return!this.isDraw()&&(!1!==this.getFinishingPlace()?this.getFinishingPlace():!1!==this.getDangerPlace()?this.getDangerPlace():this.random())},getAIHard:function(){return!this.isDraw()&&(0==n.length?this.randomCorner():1==n.length?this.isValidPlace(4)?4:this.randomCorner():2==n.length?this.isSide(this.getPlace(1))?this.getSideCorner(this.getPlace(0),this.getPlace(1)):this.isCorner(this.getPlace(1))?this.getCornerCorner(this.getPlace(0),this.getPlace(1)):this.randomSide():3==n.length?!1!==this.getDangerPlace()?this.getDangerPlace():this.random():4==n.length?!1!==this.getFinishingPlace()?this.getFinishingPlace():!1!==this.getDangerPlace()?this.getDangerPlace():this.isCorner(this.getPlace(1))?this.randomCorner():this.isSide(this.getPlace(1))?this.isBeside(this.getPlace(0),this.getPlace(1))?this.getDiagonal(this.getPlace(0)):this.getDiagonal(this.getPlace(2)):this.randomSide():!1!==this.getFinishingPlace()?this.getFinishingPlace():!1!==this.getDangerPlace()?this.getDangerPlace():this.random())},getCornerCorner:function(t,e){if(!this.isCorner(t)&&!this.isCorner(e))return!1;for(var n in this.corner_patterns)if(this.corner_patterns[n][0]==t&&this.corner_patterns[n][1]==e)return this.corner_patterns[n][2]},getDangerPlace:function(){var t=0==e?1:0;return this.win_place(t)},getDiagonal:function(t){for(var e in this.diagonal_pattern)if(this.diagonal_pattern[e][0]==t)return this.diagonal_pattern[e][1];return!1},getFinishingPlace:function(){return this.win_place(e)},getPlace:function(t){return!(t>n.length-1)&&n[t].place},getSideCorner:function(t,e){if(!this.isCorner(t))return!1;if(!this.isSide(e))return!1;for(var n in this.side_patterns)if(this.side_patterns[n][0]==t&&this.side_patterns[n][1]==e)return this.side_patterns[n][2]},hasCorner:function(){return this.corners.some(function(e){return 2==t[e]})},hasSide:function(){return this.sides.some(function(e){return 2==t[e]})},isBeside:function(t,e){if(!this.isCorner(t)&&!this.isSide(e))return!1;for(var n in this.beside_patterns)if(this.beside_patterns[n][0]==t)return this.beside_patterns[n][1]==e||this.beside_patterns[n][2]==e},isCorner:function(t){return this.corners.some(function(e){return e==t})},isDraw:function(){return t.every(function(t){return 2!==t})},isSide:function(t){return this.sides.some(function(e){return e==t})},isValidPlace:function(e){return 2==t[e]},random:function(){var e=Math.floor(Math.random()*t.length);return!this.isDraw()&&(this.isValidPlace(e)?e:this.random())},randomCorner:function(){var t=this.corners[Math.floor(Math.random()*this.corners.length)];return!!this.hasCorner()&&(this.isValidPlace(t)?t:this.randomCorner())},randomSide:function(){var t=this.sides[Math.floor(Math.random()*this.sides.length)];return!!this.hasSide()&&(this.isValidPlace(t)?t:this.randomSide())},win_place:function(e){for(var n in this.win_pattern){var r=this.win_pattern[n].filter(function(n){return t[n]==e});if(2==r.length)for(var i in this.win_pattern[n])if(2==t[this.win_pattern[n][i]])return this.win_pattern[n][i]}return!1}}}},function(t,e,n){"use strict";var r=n(11);n.n(r).a},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,"\n.button-group{\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\n}\n.button-group > * {\r\n\tmin-width: 100px;\n}\n.game-table, .game-table > tr > td{\r\n\tborder-collapse: collapse;\r\n\tborder: solid 1px white;\n}\n.game-table > tr > td{\r\n\ttext-align: center;\r\n\theight: 60px;\r\n\twidth: 60px;\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\n}\r\n",""])},function(t,e,n){"use strict";var r=n(12);n.n(r).a},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,"\n.fade-enter-active, .fade-leave-active{\r\n\ttransition: opacity .5s\n}\n.fade-enter, .fade-leave-to{\r\n\topacity: 0\n}\r\n",""])},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r={state:{modes:["A.I. (Easy)","A.I. (Hard)","2 Player"],mode:0,players:["Player 1","Player 2","A.I."],moves:["X","O",""],move:0,logs:[],scores:[0,0,0],cells:[2,2,2,2,2,2,2,2,2]},mutations:{player1:function(t,e){t.players.splice(0,1,e)},mode:function(t,e){t.mode=e},newgame:function(t){t.logs.push([])},updateCell:function(t,e){t.cells.splice(e[0],1,e[1])},resetCell:function(t){t.cells.splice(0,9,2,2,2,2,2,2,2,2,2)},resetScore:function(t){t.scores.splice(0,3,0,0,0)},addLogs:function(t,e){t.logs[t.logs.length-1].push(e)},clearLogs:function(t,e){t.logs=[]},switchMove:function(t,e){void 0!==e?t.move=e:0==t.move?t.move=1:t.move=0},incrementScore:function(t,e){var n=t.scores[e];t.scores.splice(e,1,++n)}},actions:{resetGame:function(t){t.commit("resetScore"),t.commit("resetCell"),t.commit("clearLogs"),t.commit("switchMove",0)}}};e.default=r},function(t,e,n){"use strict";n.r(e);var r=n(16),i=n(13);for(var o in i)"default"!==o&&function(t){n.d(e,t,function(){return i[t]})}(o);n(38);var a=n(0),s=Object(a.a)(i.default,r.a,r.b,!1,null,null,null);s.options.__file="src\\components\\Header.vue",e.default=s.exports},function(t,e,n){"use strict";var r=n(15);n.n(r).a},function(t,e,n){(t.exports=n(1)(!1)).push([t.i,"\n.title-bar {\r\n\tbackground: #2d3032;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tposition: fixed;\r\n\tborder-color: #ddd;\r\n\tborder-width: 1px 0;\r\n\tborder-style: solid;\t\r\n\tborder-bottom: 1px solid #2a2c2e;\r\n\tz-index: 1;\n}\n.title {\r\n\tfloat: left;\r\n\tmargin-left: 5px;\r\n\tcolor: #ddd;\r\n\ttext-overflow: ellipsis;\r\n\toverflow: hidden;\r\n\twhite-space: nowrap;\r\n\toutline: 0 !important;\r\n\tmin-height: 1.1em;\r\n\tfont-size: 1em;\n}\n.fixed-top {\r\n\ttop: 0;\n}\r\n",""])},function(t,e,n){"use strict";n.r(e);var r=function(){var t=this.$createElement,e=this._self._c||t;return e("transition",{attrs:{name:"fade"}},[e("router-view")],1)};r._withStripped=!0;n(34);var i=n(0),o=Object(i.a)({},r,[],!1,null,null,null);o.options.__file="src\\App.vue";e.default=o.exports}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,